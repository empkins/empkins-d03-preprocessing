[tool.poetry]
name = "empkins_d03_preprocessing"
version = "0.1.0"
description = ""
authors = ["Luca Abel <luca.abel@fau.de>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
empkins-io = {path = "../empkins-io", develop = true}


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.25.2"
black = { version="^22", extras=["jupyter", "d"] }
ruff = "^0.0.261"
poethepoet = "^0.11.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"



[tool.poe.tasks]
_format = "ruff format ."
_auto_fix = "ruff check . --fix-only --show-fixes --exit-zero"
_auto_fix_unsafe = "ruff check . --fix-only --show-fixes --exit-zero --unsafe-fixes"
format = ["_auto_fix", "_format"]
format_unsafe = ["_auto_fix_unsafe", "_format"]
lint = { cmd = "ruff check empkins_d03_preprocessing --fix", help = "Lint all files with ruff." }
_lint_ci = "ruff check empkins_d03_preprocessing --output-format=github"
_check_format = "ruff format . --check"
ci_check = { sequence = ["_check_format", "_lint_ci"], help = "Check all potential format and linting issues." }
test = { cmd = "pytest --cov=empkins_d03_preprocessing --cov-report=term-missing --cov-report=xml", help = "Run Pytest with coverage." }
version = { script = "_tasks:task_update_version()" }
conf_jupyter = { cmd = "python -m ipykernel install --user --name empkins_d03_preprocessing", help = "Add a new jupyter kernel for the project." }

remove_jupyter = { cmd = "jupyter kernelspec uninstall empkins_d03_preprocessing", help = "Remove the project specific jupyter kernel."}
experiment = { script = "_tasks:task_new_experiment()", help = "Create the boilerplate for a new experiment in the experiment subfolder."}
